
# this method returns a value for sigma.
# it was found by searching for the largest sigma that could be used in exact_dpp_sampling.new_main(...) such that 
# 200 samples could be drawn without K^{-1} ever having condition number > 10**6, for small k, then 
# for larger k regression was used to predict.
# true values were found using exact_dpp_sampling.many_samples_search_sigma()
def get_sigma(n,d):
    d_to_n_to_sigma = {1:{27:0.04939318816202631,
           33:0.03937168555428227,
           39:0.032916833273904315,
           47:0.02720481704452813,
           57:0.022552035311887948,
           69:0.018890803681999524,
           83:0.016035890025853844,
           100:0.013685890281750468,
       },
        2:{27:0.3076618771957846,
           33:0.25545655969015624,
           39:0.22057107394790731,
           47:0.1886578504276379,
           57:0.16176225535242436,
           69:0.13989101817261326,
           83:0.12230393001705188,
           100:0.10740082901934361,
       },
        3:{10:2.1745965606395807,
           13:1.498466132080678,
           15:1.2424414378527944,
           18:0.9922444117660543,
           27:0.6307561585953244,
           33:0.5143688467502399,
           39:0.4378477475085649,
           47:0.3688657801227756,
           57:0.3115974758670837,
           69:0.26569878982384815,
           83:0.22928865119391598,
           100:0.19882821844258847,
       },
        5:{10:5.593934257700913,
           13:3.849541029694613,
           15:3.189685233355076,
           18:2.545319905158005,
           27:1.615413440173145,
           33:1.316379168871514,
           39:1.1199020970287759,
           47:0.9428874249620244,
           57:0.796020319668537,
           69:0.6783800341621318,
           83:0.5851104160358397,
           100:0.5071221452816326,
       }
    }
    if d in d_to_n_to_sigma and n in d_to_n_to_sigma[d]:
        return d_to_n_to_sigma[d][n]
    else:
        return None
